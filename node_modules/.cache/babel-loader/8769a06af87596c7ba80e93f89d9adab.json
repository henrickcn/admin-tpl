{"remainingRequest":"/usr/local/var/www/admin-tpl/node_modules/.8.0.5@babel-loader/lib/index.js!/usr/local/var/www/admin-tpl/node_modules/.2.1.2@eslint-loader/index.js??ref--13-0!/usr/local/var/www/admin-tpl/src/api/user.js","dependencies":[{"path":"/usr/local/var/www/admin-tpl/src/api/user.js","mtime":1553855185498},{"path":"/usr/local/var/www/admin-tpl/node_modules/.2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/admin-tpl/node_modules/.8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/admin-tpl/node_modules/.2.1.2@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from '@/libs/api.request';\nconst baseURL = \"http://2.oa.com\";\nexport const login = ({\n  userName,\n  password\n}) => {\n  const data = {\n    userName,\n    password\n  };\n  return axios.request({\n    url: baseURL + '/api/index/login',\n    data,\n    method: 'post'\n  });\n};\nexport const getUserInfo = token => {\n  return axios.request({\n    url: 'get_info',\n    params: {\n      token\n    },\n    method: 'get'\n  });\n};\nexport const logout = token => {\n  return axios.request({\n    url: 'logout',\n    method: 'post'\n  });\n};\nexport const getUnreadCount = () => {\n  return axios.request({\n    url: 'message/count',\n    method: 'get'\n  });\n};\nexport const getMessage = () => {\n  return axios.request({\n    url: 'message/init',\n    method: 'get'\n  });\n};\nexport const getContentByMsgId = msg_id => {\n  return axios.request({\n    url: 'message/content',\n    method: 'get',\n    params: {\n      msg_id\n    }\n  });\n};\nexport const hasRead = msg_id => {\n  return axios.request({\n    url: 'message/has_read',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  });\n};\nexport const removeReaded = msg_id => {\n  return axios.request({\n    url: 'message/remove_readed',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  });\n};\nexport const restoreTrash = msg_id => {\n  return axios.request({\n    url: 'message/restore',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  });\n};",{"version":3,"sources":["/usr/local/var/www/admin-tpl/src/api/user.js"],"names":["axios","baseURL","login","userName","password","data","request","url","method","getUserInfo","token","params","logout","getUnreadCount","getMessage","getContentByMsgId","msg_id","hasRead","removeReaded","restoreTrash"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,MAAMC,OAAO,GAAG,iBAAhB;AACA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAC/C,QAAMC,IAAI,GAAG;AACXF,IAAAA,QADW;AAEXC,IAAAA;AAFW,GAAb;AAIA,SAAOJ,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAEN,OAAO,GAAC,kBADM;AAEnBI,IAAAA,IAFmB;AAGnBG,IAAAA,MAAM,EAAE;AAHW,GAAd,CAAP;AAKD,CAVM;AAYP,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AACpC,SAAOV,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,UADc;AAEnBI,IAAAA,MAAM,EAAE;AACND,MAAAA;AADM,KAFW;AAKnBF,IAAAA,MAAM,EAAE;AALW,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,MAAMI,MAAM,GAAIF,KAAD,IAAW;AAC/B,SAAOV,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,QADc;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAAd,CAAP;AAID,CALM;AAOP,OAAO,MAAMK,cAAc,GAAG,MAAM;AAClC,SAAOb,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,eADc;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAAd,CAAP;AAID,CALM;AAOP,OAAO,MAAMM,UAAU,GAAG,MAAM;AAC9B,SAAOd,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,cADc;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAAd,CAAP;AAID,CALM;AAOP,OAAO,MAAMO,iBAAiB,GAAGC,MAAM,IAAI;AACzC,SAAOhB,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,iBADc;AAEnBC,IAAAA,MAAM,EAAE,KAFW;AAGnBG,IAAAA,MAAM,EAAE;AACNK,MAAAA;AADM;AAHW,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,MAAMC,OAAO,GAAGD,MAAM,IAAI;AAC/B,SAAOhB,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,kBADc;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBH,IAAAA,IAAI,EAAE;AACJW,MAAAA;AADI;AAHa,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,MAAME,YAAY,GAAGF,MAAM,IAAI;AACpC,SAAOhB,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,uBADc;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBH,IAAAA,IAAI,EAAE;AACJW,MAAAA;AADI;AAHa,GAAd,CAAP;AAOD,CARM;AAUP,OAAO,MAAMG,YAAY,GAAGH,MAAM,IAAI;AACpC,SAAOhB,KAAK,CAACM,OAAN,CAAc;AACnBC,IAAAA,GAAG,EAAE,iBADc;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBH,IAAAA,IAAI,EAAE;AACJW,MAAAA;AADI;AAHa,GAAd,CAAP;AAOD,CARM","sourcesContent":["import axios from '@/libs/api.request'\nconst baseURL = \"http://2.oa.com\"\nexport const login = ({ userName, password }) => {\n  const data = {\n    userName,\n    password\n  }\n  return axios.request({\n    url: baseURL+'/api/index/login',\n    data,\n    method: 'post'\n  })\n}\n\nexport const getUserInfo = (token) => {\n  return axios.request({\n    url: 'get_info',\n    params: {\n      token\n    },\n    method: 'get'\n  })\n}\n\nexport const logout = (token) => {\n  return axios.request({\n    url: 'logout',\n    method: 'post'\n  })\n}\n\nexport const getUnreadCount = () => {\n  return axios.request({\n    url: 'message/count',\n    method: 'get'\n  })\n}\n\nexport const getMessage = () => {\n  return axios.request({\n    url: 'message/init',\n    method: 'get'\n  })\n}\n\nexport const getContentByMsgId = msg_id => {\n  return axios.request({\n    url: 'message/content',\n    method: 'get',\n    params: {\n      msg_id\n    }\n  })\n}\n\nexport const hasRead = msg_id => {\n  return axios.request({\n    url: 'message/has_read',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  })\n}\n\nexport const removeReaded = msg_id => {\n  return axios.request({\n    url: 'message/remove_readed',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  })\n}\n\nexport const restoreTrash = msg_id => {\n  return axios.request({\n    url: 'message/restore',\n    method: 'post',\n    data: {\n      msg_id\n    }\n  })\n}\n"]}]}